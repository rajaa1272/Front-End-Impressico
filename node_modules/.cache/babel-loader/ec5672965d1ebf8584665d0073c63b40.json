{"ast":null,"code":"var _jsxFileName = \"/home/arepellinagaraj/Documents/FrontendDevelopment/React Js/first-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { View } from \"./components/View\";\nimport MainNavbar from \"./layout/MainNavbar\"; // getting the values of local storage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getDatafromLS = () => {\n  const data = localStorage.getItem('books');\n\n  if (data) {\n    return JSON.parse(data);\n  } else {\n    return [];\n  }\n};\n\nlet App = () => {\n  _s();\n\n  // main array of objects state || books state || books array of objects\n  const [books, setbooks] = useState(getDatafromLS()); // input field states\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [isbn, setIsbn] = useState(''); // form submit event\n\n  const handleAddBookSubmit = e => {\n    e.preventDefault(); // creating an object\n\n    let book = {\n      title,\n      author,\n      isbn\n    };\n    setbooks([...books, book]);\n    setTitle('');\n    setAuthor('');\n    setIsbn('');\n  }; // delete book from LS\n\n\n  const deleteBook = isbn => {\n    const filteredBooks = books.filter((element, index) => {\n      return element.isbn !== isbn;\n    });\n    setbooks(filteredBooks);\n  }; // saving data to local storage\n\n\n  useEffect(() => {\n    localStorage.setItem('books', JSON.stringify(books));\n  }, [books]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MainNavbar, {\n      title: \"Book Store Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"lQF0zzN8Fsb3ljFmuunJYrdTRBk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/arepellinagaraj/Documents/FrontendDevelopment/React Js/first-app/src/App.js"],"names":["React","useState","useEffect","View","MainNavbar","getDatafromLS","data","localStorage","getItem","JSON","parse","App","books","setbooks","title","setTitle","author","setAuthor","isbn","setIsbn","handleAddBookSubmit","e","preventDefault","book","deleteBook","filteredBooks","filter","element","index","setItem","stringify"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CAEA;;;;;AACA,MAAMC,aAAa,GAAC,MAAI;AACpB,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;;AACA,MAAGF,IAAH,EAAQ;AACN,WAAOG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACD,GAFD,MAGI;AACF,WAAO,EAAP;AACD;AACF,CARH;;AAUA,IAAIK,GAAG,GAAG,MAAM;AAAA;;AACX;AACH,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBZ,QAAQ,CAACI,aAAa,EAAd,CAAhC,CAFc,CAId;;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAgBlB,QAAQ,CAAC,EAAD,CAA9B,CAPc,CASd;;AACA,QAAMmB,mBAAmB,GAAEC,CAAD,IAAK;AAC7BA,IAAAA,CAAC,CAACC,cAAF,GAD6B,CAE7B;;AACA,QAAIC,IAAI,GAAC;AACPT,MAAAA,KADO;AAEPE,MAAAA,MAFO;AAGPE,MAAAA;AAHO,KAAT;AAKAL,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUW,IAAV,CAAD,CAAR;AACAR,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAZD,CAVc,CAwBd;;;AACA,QAAMK,UAAU,GAAEN,IAAD,IAAQ;AACvB,UAAMO,aAAa,GAACb,KAAK,CAACc,MAAN,CAAa,CAACC,OAAD,EAASC,KAAT,KAAiB;AAChD,aAAOD,OAAO,CAACT,IAAR,KAAiBA,IAAxB;AACD,KAFmB,CAApB;AAGAL,IAAAA,QAAQ,CAACY,aAAD,CAAR;AACD,GALD,CAzBc,CAgCd;;;AACAvB,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,YAAY,CAACsB,OAAb,CAAqB,OAArB,EAA6BpB,IAAI,CAACqB,SAAL,CAAelB,KAAf,CAA7B;AACD,GAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;AAIE,sBACI;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH,CA5CD;;GAAID,G;;KAAAA,G;AA8CJ,eAAeA,GAAf","sourcesContent":["// import './App.css';\nimport React,{useState, useEffect} from 'react';\nimport {View} from \"./components/View\";\nimport MainNavbar from \"./layout/MainNavbar\";\n\n// getting the values of local storage\nconst getDatafromLS=()=>{\n    const data = localStorage.getItem('books');\n    if(data){\n      return JSON.parse(data);\n    }\n    else{\n      return []\n    }\n  }\n\nlet App = () => {\n     // main array of objects state || books state || books array of objects\n  const [books, setbooks]=useState(getDatafromLS());\n\n  // input field states\n  const [title, setTitle]=useState('');\n  const [author, setAuthor]=useState('');\n  const [isbn, setIsbn]=useState('');\n\n  // form submit event\n  const handleAddBookSubmit=(e)=>{\n    e.preventDefault();\n    // creating an object\n    let book={\n      title,\n      author,\n      isbn\n    }\n    setbooks([...books,book]);\n    setTitle('');\n    setAuthor('');\n    setIsbn('');\n  }\n\n  // delete book from LS\n  const deleteBook=(isbn)=>{\n    const filteredBooks=books.filter((element,index)=>{\n      return element.isbn !== isbn\n    })\n    setbooks(filteredBooks);\n  }\n\n  // saving data to local storage\n  useEffect(()=>{\n    localStorage.setItem('books',JSON.stringify(books));\n  },[books])\n\n    return (\n        <>\n            <MainNavbar title={\"Book Store Application\"}/>\n            \n            \n        </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}